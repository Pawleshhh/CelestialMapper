<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:ui="clr-namespace:CelestialMapper.UI"
    xmlns:vm="clr-namespace:CelestialMapper.ViewModel;assembly=CelestialMapper.ViewModel">

    <DataTemplate x:Key="Private.DataTemplate.PaperItem.Base" DataType="{x:Type vm:IPaperItem}" />

    <DataTemplate x:Key="Private.DataTemplate.PaperItem.ViewModelBase" DataType="{x:Type vm:PaperItemBaseViewModel}">
        <ui:FactoryView FeatureName="{Binding FeatureName}" />
    </DataTemplate>

    <DataTemplate x:Key="Private.DataTemplate.PaperItem.Text" DataType="{x:Type vm:TextItem}">
        <TextBlock Style="{DynamicResource Style.TextBlock.Regular}" Text="{Binding Text}" />
    </DataTemplate>

    <ui:DataTypeTemplateSelector x:Key="DataTemplateSelector.PaperItems">
        <ui:PlatformDataTemplateSelectorItem DataTemplate="{StaticResource Private.DataTemplate.PaperItem.ViewModelBase}" IsDefault="True" />
        <ui:PlatformDataTemplateSelectorItem DataTemplate="{StaticResource Private.DataTemplate.PaperItem.Text}" />
    </ui:DataTypeTemplateSelector>

    <Style x:Key="Style.DragContainer" TargetType="{x:Type ui:DragContainer}">
        <Setter Property="BorderBrush" Value="Black" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderThickness" Value="2" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Private.Style.PaperItemControl" TargetType="{x:Type ui:PaperItemControl}">
        <Setter Property="ContentTemplateSelector" Value="{StaticResource DataTemplateSelector.PaperItems}" />
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.Width}" />
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.Height}" />
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.BackgroundColor}" />
        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.BorderColor}" />
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.BorderThickness}" />
        <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.IsVisible, Converter={x:Static ui:Converters.FalseMakesMeCollapsed}}" />
    </Style>

    <Style x:Key="Style.Paper" TargetType="ui:Paper">
        <Setter Property="Background" Value="White" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Canvas />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Canvas.Left" Value="{Binding X, Mode=TwoWay}" />
                    <Setter Property="Canvas.Top" Value="{Binding Y, Mode=TwoWay}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type vm:IPaperItem}">
                    <ui:DragContainer
                        x:Name="PaperItemDragContainer"
                        IsSelected="{Binding IsSelected, Mode=TwoWay}"
                        RelativeParent="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ui:Paper}}}"
                        Style="{StaticResource Style.DragContainer}"
                        XPos="{Binding X, Mode=TwoWay}"
                        YPos="{Binding Y, Mode=TwoWay}">
                        <ui:PaperItemControl Content="{Binding .}" Style="{StaticResource Private.Style.PaperItemControl}" />
                    </ui:DragContainer>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>